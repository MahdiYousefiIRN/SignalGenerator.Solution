@page "/export"
@using SignalGenerator.Data.Services
@inject IDataExportService ExportService
@inject ILogger<ExportComponent> Logger

<h3>📤 Export Data</h3>

<!-- Export Buttons Section -->
<div class="export-buttons">
    <button class="btn btn-success" @onclick="ExportToCsv">📄 Export to CSV</button>
    <button class="btn btn-primary" @onclick="ExportToJson">📝 Export to JSON</button>
    <button class="btn btn-warning" @onclick="ExportToExcel">📊 Export to Excel</button>
</div>

<!-- Message Alert Display -->
@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-info mt-3">@message</div>
}

@code {
    private string message;

    /// <summary>
    /// Handles CSV export action and logs success or failure.
    /// </summary>
    private async Task ExportToCsv()
    {
        try
        {
            Logger.LogInformation("📄 Exporting data to CSV...");
            await ExportService.ExportToCsvAsync(DateTime.Now.AddDays(-7), DateTime.Now);  // Example date range
            message = "✅ Data successfully exported to CSV!";
            Logger.LogInformation("✅ CSV export completed successfully.");
        }
        catch (Exception ex)
        {
            message = "❌ Error exporting to CSV!";
            Logger.LogError($"⛔ CSV export failed: {ex.Message}");
        }
    }

    /// <summary>
    /// Handles JSON export action and logs success or failure.
    /// </summary>
    private async Task ExportToJson()
    {
        try
        {
            Logger.LogInformation("📝 Exporting data to JSON...");
            await ExportService.ExportToJsonAsync(DateTime.Now.AddDays(-7), DateTime.Now);  // Example date range
            message = "✅ Data successfully exported to JSON!";
            Logger.LogInformation("✅ JSON export completed successfully.");
        }
        catch (Exception ex)
        {
            message = "❌ Error exporting to JSON!";
            Logger.LogError($"⛔ JSON export failed: {ex.Message}");
        }
    }

    /// <summary>
    /// Handles Excel export action and logs success or failure.
    /// </summary>
    private async Task ExportToExcel()
    {
        try
        {
            Logger.LogInformation("📊 Exporting data to Excel...");
            await ExportService.ExportToExcelAsync(DateTime.Now.AddDays(-7), DateTime.Now);  // Example date range
            message = "✅ Data successfully exported to Excel!";
            Logger.LogInformation("✅ Excel export completed successfully.");
        }
        catch (Exception ex)
        {
            message = "❌ Error exporting to Excel!";
            Logger.LogError($"⛔ Excel export failed: {ex.Message}");
        }
    }
}
