@{
    ViewData["Title"] = "Signal Generator";
}

<div class="container-fluid">
    <div class="row">
        <!-- Signal Configuration Panel -->
        <div class="col-md-4">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h5 class="card-title mb-0">Signal Configuration</h5>
                </div>
                <div class="card-body">
                    <form id="signalConfigForm">
                        <div class="mb-3">
                            <label for="signalCount" class="form-label">Number of Signals</label>
                            <input type="number" class="form-control" id="signalCount" min="1" max="100" value="10" required>
                        </div>

                        <div class="mb-3">
                            <label for="frequencyRange" class="form-label">Frequency Range (Hz)</label>
                            <div class="input-group">
                                <input type="number" class="form-control" id="minFrequency" placeholder="Min" value="0" required>
                                <span class="input-group-text">to</span>
                                <input type="number" class="form-control" id="maxFrequency" placeholder="Max" value="1000" required>
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="interval" class="form-label">Interval (ms)</label>
                            <input type="number" class="form-control" id="interval" min="100" max="10000" value="1000" required>
                        </div>

                        <div class="mb-3">
                            <label for="protocolType" class="form-label">Protocol Type</label>
                            <select class="form-select" id="protocolType" required>
                                <option value="http">HTTP</option>
                                <option value="modbus">Modbus</option>
                                <option value="signalr">SignalR</option>
                            </select>
                        </div>

                        <div class="mb-3">
                            <label for="groupName" class="form-label">Signal Group (Optional)</label>
                            <div class="input-group">
                                <select class="form-select" id="groupName">
                                    <option value="">Select a group</option>
                                </select>
                                <button type="button" class="btn btn-outline-primary" id="createGroupBtn">
                                    <i class="bi bi-plus-circle"></i> New
                                </button>
                            </div>
                        </div>

                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">Generate Signals</button>
                        </div>
                    </form>
                </div>
            </div>

            <!-- Group Management Panel -->
            <div class="card shadow-sm">
                <div class="card-header bg-success text-white">
                    <h5 class="card-title mb-0">Group Management</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label for="newGroupName" class="form-label">New Group Name</label>
                        <div class="input-group">
                            <input type="text" class="form-control" id="newGroupName" placeholder="Enter group name">
                            <button class="btn btn-success" id="createGroupSubmitBtn">Create</button>
                        </div>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Group Members</label>
                        <div id="groupMembers" class="list-group">
                            <!-- Group members will be listed here -->
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Signal Display Panel -->
        <div class="col-md-8">
            <div class="card shadow-sm mb-4">
                <div class="card-header bg-info text-white d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">Signal Visualization</h5>
                    <div class="btn-group">
                        <button class="btn btn-light btn-sm" id="exportCsvBtn">Export CSV</button>
                        <button class="btn btn-light btn-sm" id="exportJsonBtn">Export JSON</button>
                        <button class="btn btn-light btn-sm" id="exportExcelBtn">Export Excel</button>
                    </div>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <div class="d-flex justify-content-between align-items-center">
                            <div>
                                <span class="badge bg-success" id="connectionStatus">Connected</span>
                            </div>
                            <div>
                                <button class="btn btn-sm btn-outline-secondary" id="clearDataBtn">Clear Data</button>
                            </div>
                        </div>
                    </div>

                    <canvas id="signalChart"></canvas>
                </div>
            </div>

            <!-- Signal Data Table -->
            <div class="card shadow-sm">
                <div class="card-header bg-secondary text-white">
                    <h5 class="card-title mb-0">Signal Data</h5>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover" id="signalTable">
                            <thead>
                                <tr>
                                    <th>Time</th>
                                    <th>Signal ID</th>
                                    <th>Value</th>
                                    <th>Frequency</th>
                                    <th>Protocol</th>
                                </tr>
                            </thead>
                            <tbody>
                                <!-- Signal data will be populated here -->
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Group Modal -->
<div class="modal fade" id="createGroupModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create New Signal Group</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="createGroupForm">
                    <div class="mb-3">
                        <label for="modalGroupName" class="form-label">Group Name</label>
                        <input type="text" class="form-control" id="modalGroupName" required>
                    </div>
                    <div class="mb-3">
                        <label for="groupDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="groupDescription" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="modalCreateGroupBtn">Create</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.2/font/bootstrap-icons.css">
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="~/js/signalHub.js"></script>
    <script>
        // Initialize Chart
        const ctx = document.getElementById('signalChart').getContext('2d');
        const signalChart = new Chart(ctx, {
            type: 'line',
            data: {
                labels: [],
                datasets: []
            },
            options: {
                responsive: true,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                animation: {
                    duration: 0
                }
            }
        });

        // Signal Hub Client
        const signalHub = new SignalHubClient();
        signalHub.onSignalReceived = (signal) => {
            updateChart(signal);
            updateTable(signal);
        };

        // Form Submission
        document.getElementById('signalConfigForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const config = {
                signalCount: parseInt(document.getElementById('signalCount').value),
                minFrequency: parseFloat(document.getElementById('minFrequency').value),
                maxFrequency: parseFloat(document.getElementById('maxFrequency').value),
                interval: parseInt(document.getElementById('interval').value),
                protocolType: document.getElementById('protocolType').value,
                groupName: document.getElementById('groupName').value
            };

            try {
                const response = await fetch('/Signal/GenerateSignals', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify(config)
                });

                if (response.ok) {
                    const result = await response.json();
                    console.log('Signals generated:', result);
                } else {
                    console.error('Failed to generate signals');
                }
            } catch (error) {
                console.error('Error:', error);
            }
        });

        // Group Management
        let groups = [];
        const loadGroups = async () => {
            try {
                const response = await fetch('/Signal/GetSignalGroups');
                if (response.ok) {
                    groups = await response.json();
                    updateGroupSelect();
                }
            } catch (error) {
                console.error('Error loading groups:', error);
            }
        };

        const updateGroupSelect = () => {
            const select = document.getElementById('groupName');
            select.innerHTML = '<option value="">Select a group</option>';
            groups.forEach(group => {
                select.innerHTML += `<option value="${group.id}">${group.name}</option>`;
            });
        };

        // Create Group Modal
        const createGroupModal = new bootstrap.Modal(document.getElementById('createGroupModal'));
        
        document.getElementById('createGroupBtn').addEventListener('click', () => {
            createGroupModal.show();
        });

        document.getElementById('modalCreateGroupBtn').addEventListener('click', async () => {
            const name = document.getElementById('modalGroupName').value;
            const description = document.getElementById('groupDescription').value;

            if (!name) return;

            try {
                const response = await fetch('/Signal/CreateSignalGroup', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ name, description })
                });

                if (response.ok) {
                    const result = await response.json();
                    groups.push(result);
                    updateGroupSelect();
                    createGroupModal.hide();
                    document.getElementById('createGroupForm').reset();
                }
            } catch (error) {
                console.error('Error creating group:', error);
            }
        });

        // Export Functions
        document.getElementById('exportCsvBtn').addEventListener('click', () => {
            window.location.href = '/Export/ExportToCsv';
        });

        document.getElementById('exportJsonBtn').addEventListener('click', () => {
            window.location.href = '/Export/ExportToJson';
        });

        document.getElementById('exportExcelBtn').addEventListener('click', () => {
            window.location.href = '/Export/ExportToExcel';
        });

        // Clear Data
        document.getElementById('clearDataBtn').addEventListener('click', () => {
            signalChart.data.labels = [];
            signalChart.data.datasets = [];
            signalChart.update();
            document.querySelector('#signalTable tbody').innerHTML = '';
        });

        // Initialize
        loadGroups();
        signalHub.start();
    </script>
}
