@using SignalGenerator.Web.Services
@inject AppState AppState

@code {
    private bool IsVisible { get; set; } = false;

    protected override void OnInitialized()
    {
        AppState.OnLoadingStart += Show;
        AppState.OnLoadingEnd += Hide;
    }

    private Task Show()
    {
        IsVisible = true;
        StateHasChanged();
        return Task.CompletedTask;
    }

    private Task Hide()
    {
        IsVisible = false;
        StateHasChanged();
        return Task.CompletedTask;
    }
}

@if (IsVisible)
{
    <div class="loading-bounce">
        <div class="bounce"></div>
        <div class="bounce"></div>
        <div class="bounce"></div>
    </div>
}

<style>
    .loading-bounce {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        z-index: 9999;
        display: flex;
        align-items: center;
        gap: 4px;
    }

    .bounce {
        width: 12px;
        height: 12px;
        background-color: #007bff;
        border-radius: 50%;
        animation: bounce 1s infinite;
    }

        .bounce:nth-child(2) {
            animation-delay: 0.2s;
        }

        .bounce:nth-child(3) {
            animation-delay: 0.4s;
        }

   

    }
</style>
